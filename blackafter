// Import necessary modules
const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');
const app = express();

// Middleware
app.use(bodyParser.json());
app.use(cors());

// Routes
app.get('/', (req, res) => {
  res.send('Welcome to the Amazon electronic store!');
});

// Product catalog
app.get('/products', (req, res) => {
  const products = [
    { id: 1, name: 'Product 1', price: 100 },
    { id: 2, name: 'Product 2', price: 200 },
    { id: 3, name: 'Product 3', price: 300 },
  ];
  res.json(products);
});

// Search catalog
app.get('/search', (req, res) => {
  const { query } = req.query;
  const products = [
    { id: 1, name: 'Product 1', price: 100 },
    { id: 2, name: 'Product 2', price: 200 },
    { id: 3, name: 'Product 3', price: 300 },
  ];
  const results = products.filter(product => product.name.toLowerCase().includes(query.toLowerCase()));
  res.json(results);
});

// Filters
app.get('/filters', (req, res) => {
  const { minPrice, maxPrice } = req.query;
  const products = [
    { id: 1, name: 'Product 1', price: 100 },
    { id: 2, name: 'Product 2', price: 200 },
    { id: 3, name: 'Product 3', price: 300 },
  ];
  let filteredProducts = products;
  if (minPrice) {
    filteredProducts = filteredProducts.filter(product => product.price >= minPrice);
  }
  if (maxPrice) {
    filteredProducts = filteredProducts.filter(product => product.price <= maxPrice);
  }
  res.json(filteredProducts);
});

// Reviews and ratings
app.get('/reviews/:productId', (req, res) => {
  const { productId } = req.params;
  const reviews = [
    { id: 1, productId: 1, rating: 5, comment: 'Great product!' },
    { id: 2, productId: 1, rating: 4, comment: 'Good product.' },
    { id: 3, productId: 2, rating: 3, comment: 'Meh.' },
  ];
  const productReviews = reviews.filter(review => review.productId.toString() === productId);
  res.json(productReviews);
});

// Subscription for customers
app.post('/subscribe', (req, res) => {
  const { email } = req.body;
  // Save email to database
  res.send('Thanks for subscribing!');
});

// Log in and username
app.post('/login', (req, res) => {
  const { username, password } = req.body;
  // Validate username and password
  if (username === 'test' && password === 'test') {
    res.json({ username, isLoggedIn: true });
  } else {
    res.json({ message: 'Invalid username or password.' });
  }
});

// One-click ordering
app.post('/order', (req, res) => {
  const { productId, quantity } = req.body;
  // Process order
  res.send('Order placed!');
});

// Suggest products
app.get('/suggestions/:userId', (req, res) => {
  const { userId } = req.params;
  const suggestions = [
    { id: 1, productId: 1, name: 'Product 1' },
    { id: 2, productId: 
